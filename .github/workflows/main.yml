name: CI/CD - Deploy to EC2

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-main
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # If your SSH port is non-22, uncomment the next line
          # port: 22
          script: |
            set -e

            # Load nvm so node/npm/pm2 are on PATH for non-interactive shells
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
            nvm use --lts || nvm use 22 || true

            # Pull latest code
            cd /home/ubuntu/pern-stack
            git fetch origin main
            git reset --hard origin/main

            # --- Backend ---
            cd backend
            npm ci --omit=dev

            # Ensure .env exists on server (we're not uploading secrets from GitHub)
            if [ ! -f .env ]; then
              echo ".env missing in backend/. Please create it on the server."
              exit 1
            fi

            # Create/upgrade DB table if needed (your server.js already runs initDB)
            # Start or restart pm2 service for backend
            if pm2 describe taskpro-backend > /dev/null 2>&1; then
              pm2 restart taskpro-backend
            else
              pm2 start backend/server.js --name taskpro-backend
            fi
            pm2 save

            # --- Frontend ---
            cd ../frontend
            npm ci
            npm run build

            # Publish static files
            sudo mkdir -p /var/www/pern-frontend
            sudo rsync -a --delete dist/ /var/www/pern-frontend/

            # --- Nginx ---
            sudo nginx -t
            sudo systemctl reload nginx

            echo "âœ… Deploy complete"
